#!/bin/bash
####COLORS#####
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"
bold="\033[1m"
reset="\033[0m"
################
###defaults#####
baseDir=$(pwd)
nameDir="jail"
cmd=$(whoami)
bins="su ls rm mv bash"
if [[ $cmd != "root" ]]; then
  printf "$red\bPlease run the script as root user$reset\n"
  exit 1
fi
#####################
######make dirs######
dirMake(){
  echo "Creating Jails"
  $(mkdir $baseDir/$nameDir)
  printf "\033[32m$nameDir is created creating config folder inside\033[0m\n"
  $(eval "mkdir $baseDir/$nameDir/{bin,lib,dev,etc,lib64}")
}
###################
###input required##
reqinp(){
  if [[ -z $2  || $2 =~ ^\-.* ]];then
      printf "\033[31m$1 flag requires an argument\033[0m\n"
      exit 1; fi
}
################
####add file####
addFile(){
  if [[ -n $1 && -e $1 ]] ; then
    if [[ ! -d $baseDir/$nameDir ]]
      then
       printf "\033[31mno jail named $baseDir/$nameDir\033[0m\n"
       exit 1
     fi
    printf "\033[36mcopying $1 into $baseDir/$nameDir/$1\033[0m\n"
      $(mkdir -p $baseDir/$nameDir/$(dirname $1))
      $(cp $1 $baseDir/$nameDir/$1)
    exit 0
    else
    printf "\033[31m$1 : no such file or directory\033[0m\n"
    exit 1
  fi
}
################
#####cp libs####
cplibs(){
  if [[ ! -d $nameDir ]];then
    echo "!no jail named $nameDir please specify a jail name with -n parameter"
    exit 1
  fi
  echo "copying libs..."
for i in $1 ; do
binAddr=$(which $i)
if [[ $? = 0 ]]; then
ldd=$(ldd $binAddr |cut -d ">" -f2|cut -d "(" -f1)
    $(ldd $binAddr &>/dev/null)
    if [[ $? = 0 ]];then
      for l in $ldd ;do
        if [[ -n $l ]]; then
            $(mkdir -p $baseDir/$nameDir$(dirname $l))
            printf "\033[32m cp $l --> $baseDir/$nameDir/$l\033[0m\n"
            $(cp $l $baseDir/$nameDir/$l)
        fi
      done
fi
fi
done
exit 0
}
################
#####cp bins####
cpBins(){
  printf "copying binaries and dependencies\n"
for i in $bins
do
  echo $i
  binAddr=$(which $i)
  if [[ $? = 0 ]]; then
    printf "\033[32m cp $binAddr --> $nameDir/$binAddr\033[0m\n"
    $(mkdir -p $baseDir/$nameDir$(dirname $binAddr))
    $(cp  $binAddr $baseDir/$nameDir/$binAddr)
    ldd=$(ldd $binAddr |cut -d ">" -f2|cut -d "(" -f1)
    $(ldd $binAddr &>/dev/null)
    if [[ $? = 0 ]];then
      for l in $ldd ;do
        if [[ -n $l ]]; then
            $(mkdir -p $baseDir/$nameDir$(dirname $l))
            printf "\033[32m cp $l --> $baseDir/$nameDir/$l\033[0m\n"
            $(cp $l $baseDir/$nameDir/$l)
        fi
      done
    fi
  else
    printf "\033[31m$i cannot be found You may need to copy it manually\033[0m
Hit enter to continue or ctrl+c to quit script\n"
read
  fi
done
}
################
###Parse Command Line Args########
while [[ -n $1 ]];do
# run wcript with -h flag to see help text
   if [[ $1 =~ ^[^-].* ]] ; then
     printf "\033[31mI dont understand what you meant with \033[7m$1\033[0m\n"
     exit 1
   fi
case $1 in
  -h|--help)
echo "Create Chroot Jails"
echo "Usage : jailize [options]"
echo "Options:"
echo "-a,--append-binary Append a binary to include into binary list"
echo "-b,--binaries      Whitespace seperated binary list string to put each with dependent libraries into jails"
echo "-d,--dirname       Base directory if no given current working directory is default"
echo "-j,--just-libs     Copy only needed libs not the binary"
echo "-n,--name          name of the folder default=jail"
echo "--add-file         add libraries, files or entire folders into the jail once a time"
echo "                usage: jailize -n jailName --add-file file [jail location]"
echo "                *jail location is optional"
echo "                *name is optional if not given searches for folder named jail"
echo "-h,--help          Show this help text"
exit 0
    ;;
    -n|--name)
      reqinp $1 $2
      nameDir=$2
      shift 2
      ;;
    -d|--dirname)
    reqinp $1 $2
     if [[ -d $2 ]]; then
      baseDir=$2
      shift 2
    else
      printf "\033[31m$2 is not a directory.\033[0m\n"
      exit 1
    fi
    ;;
    -a|--append)
    reqinp $1 $2
    bins+=" $2";shift 2 ;;
    -b|--binaries)
    reqinp $1 $2
    bins=$2;shift 2
    ;;
    --add-file)
      reqinp $1 $2
      addFlag=$2
      shift 2
    ;;
    -j|--just-libs)
    reqinp $1 $2
    jbins=$2
    shift 2
    ;;
    *)
    printf "\033[31mI dont understand what you meant with \033[7m$1\033[0m\n"
    exit 1 ;;
esac
done
###########################
#######Action##############
[[ -n $addFlag ]]&& addFile $addFlag
[[ -n $jbins ]]&& cplibs $jbins
printf "\033[32mStarting ...\033[0m\n"
printf "\033[36mProgram variables$reset
Base Dir                          : $baseDir
Binaries to put into jail         : $bins
Name of the Jail                  : $nameDir
\033[35mHit enter to continue or ctrl -c to purge config and start over\033[1A\033[0m\n"
read
dirMake
printf "dirs succesfully created continuing to copy binaries\n"
cpBins
echo "Jail is ready. you can go into jail by typing sudo chroot $baseDir/$nameDir"
